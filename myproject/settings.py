"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/

1. SECRETE_KEY 처리(.env)
2. 앱등록
3. myproject밑에 template 폴더와 static 폴더 추가 등록(base.html, footer.html, ~)
4. 한국어 등록
5. timezone 등록
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print('★ BASE_DIR', BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
from decouple import config
SECRET_KEY = config("SECRET_KEY", 'secretekey')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# .env에 ALLOWED_HOST=3.15.121.1, domain.com
ALLOWED_HOSTS = config("ALLOWED_HOSTS", default="").split(",")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions", # 추가 앱 등록(django 5.2부터는 shell에도 model 자동 등록)
    "blog",
    "accounts",
    "book",
    "django.contrib.humanize", # intcomma(세자리마다 ,) 필터 사용
    "article", # GenericView 이용(paging 처리), 파일첨부(ch08)
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "myproject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "myproject", "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "myproject.context_processors.myproject",
            ],
        },
    },
]

WSGI_APPLICATION = "myproject.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    # }, # 다른 개인 정보와 유사한 비밀번호는 사용할 수 없습니다.
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {
            "min_length": 2,
        },
    }, # 비밀번호는 최소 2자 이상이어야 합니다.
    # {
    #    "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    # }, # 통상적으로 자주 사용되는 비밀번호는 사용할 수 없습니다.
    # {
    #    "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    # }, # 숫자로만 이루어진 비밀번호는 사용할 수 없습니다.
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# 개발 환경
STATIC_URL = "static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "myproject", "static"),
]
# 운영 환경 python manage.py collectstatic 실행(ppt 10page)
STATIC_ROOT = os.path.join(BASE_DIR, '_staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# https://github.com/django/django/blob/main/django/conf/global_settings.py
# media파일의 url prefix /media/article/noImg.png
MEDIA_URL = '/media/'
# 업로드한 파일이 저장될 폴더 -> 이미지 파일 지원 라이브러리 pip install pillow -> pip freeze > requirements.txt
MEDIA_ROOT = os.path.join(BASE_DIR, "_media")

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST ='smtp.gmail.com'
EMAIL_PORT=465
EMAIL_HOST_USER = config('MAIL_HOST_USER')
EMAIL_HOST_PASSWORD=config('MAIL_HOST_PASSWORD')
EMAIL_USE_SSL=True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER